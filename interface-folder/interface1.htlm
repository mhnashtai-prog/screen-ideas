<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>INTUITY - Simple Swipe Interface</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=Space+Grotesk:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

  <style>
    :root {
      --bg-primary: #1a2332;
      --bg-secondary: #243447;
      --card-bg: rgba(255, 255, 255, 0.08);
      --card-border: rgba(255, 255, 255, 0.12);
      --accent-gold: #f4a261;
      --accent-teal: #2dd4bf;
      --accent-lime: #32d74b;
      --accent-orange: #ff9500;
      --accent-purple: #8b5cf6;
      --text-primary: #ffffff;
      --text-secondary: rgba(255, 255, 255, 0.7);
      --text-muted: rgba(255, 255, 255, 0.5);
      --intuity-gold: #ffd54f;
      --intuity-teal: #26a69a;
      --blur: blur(20px);
      --shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
      background: linear-gradient(135deg, var(--bg-primary) 0%, var(--bg-secondary) 100%);
      color: var(--text-primary);
      min-height: 100vh;
      line-height: 1.6;
      overflow-x: hidden;
      touch-action: manipulation;
    }

    .constellation-bg {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: 1;
      opacity: 0.3;
    }

    .star {
      position: absolute;
      width: 2px;
      height: 2px;
      background: var(--accent-gold);
      border-radius: 50%;
      animation: twinkle 3s infinite alternate;
    }

    .star:nth-child(even) {
      animation-delay: 1.5s;
      background: var(--accent-teal);
    }

    @keyframes twinkle {
      0% { opacity: 0.3; }
      100% { opacity: 0.8; }
    }

    .header {
      position: sticky;
      top: 0;
      z-index: 100;
      background: rgba(26, 35, 50, 0.9);
      backdrop-filter: var(--blur);
      border-bottom: 1px solid var(--card-border);
      padding: 12px;
    }

    .header-content {
      max-width: 600px;
      margin: 0 auto;
      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;
    }

    .brand-name {
      font-family: 'Space Grotesk', sans-serif;
      font-size: 2.5rem;
      font-weight: 700;
      background: linear-gradient(135deg, var(--intuity-gold) 0%, var(--intuity-teal) 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      margin-bottom: 8px;
      position: relative;
    }

    .brand-name::after {
      content: '✨';
      position: absolute;
      top: -10px;
      right: -20px;
      font-size: 1.5rem;
      animation: sparkle 3s ease-in-out infinite;
    }

    @keyframes sparkle {
      0%, 100% { 
        opacity: 0.5; 
        transform: scale(1) rotate(0deg); 
      }
      50% { 
        opacity: 1; 
        transform: scale(1.3) rotate(180deg); 
      }
    }

    .subtitle {
      font-size: 0.9rem;
      color: var(--text-secondary);
      margin-bottom: 8px;
    }

    .author-section {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 2rem;
      margin-top: 0.25rem;
    }

    .author-credit {
      font-size: 0.65rem;
      color: var(--text-muted);
      font-weight: 300;
    }

    .nav-btn {
      background: var(--card-bg);
      backdrop-filter: var(--blur);
      border: 1px solid var(--card-border);
      color: var(--text-primary);
      padding: 0.5rem 1rem;
      border-radius: 0.75rem;
      font-size: 0.85rem;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      text-decoration: none;
      display: flex;
      align-items: center;
      gap: 0.25rem;
    }

    .nav-btn:hover {
      background: rgba(255, 255, 255, 0.15);
      border-color: var(--accent-teal);
      transform: translateY(-2px);
    }

    /* Main Content */
    .main-container {
      max-width: 600px;
      margin: 0 auto;
      padding: 2rem;
      position: relative;
      z-index: 10;
      min-height: 60vh;
    }

    .text-display-container {
      background: rgba(255, 255, 255, 0.03);
      border: 1px solid var(--card-border);
      border-radius: 1rem;
      padding: 2rem;
      margin-bottom: 2rem;
      line-height: 1.8;
      font-size: 1.05rem;
      box-shadow: var(--shadow);
      backdrop-filter: var(--blur);
      text-align: center;
    }

    .text-paragraph {
      margin-bottom: 1.5rem;
    }

    .text-highlight {
      background: linear-gradient(135deg, var(--accent-gold), var(--accent-teal));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      font-weight: 600;
    }

    .instruction-hint {
      text-align: center;
      color: var(--text-muted);
      font-size: 0.9rem;
      margin: 2rem 0;
      opacity: 0;
      animation: fadeInOut 6s ease-in-out infinite;
    }

    @keyframes fadeInOut {
      0%, 100% { opacity: 0; }
      20%, 80% { opacity: 0.6; }
    }

    /* The Single Swipe Box */
    .swipe-container {
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      height: 300px;
      background: var(--card-bg);
      backdrop-filter: var(--blur);
      border-top: 1px solid var(--card-border);
      border-radius: 1rem 1rem 0 0;
      box-shadow: 0 -8px 32px rgba(0, 0, 0, 0.3);
      z-index: 200;
      overflow: hidden;
      transform: translateY(220px);
      transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    .swipe-container.visible {
      transform: translateY(0);
    }

    .swipe-handle {
      position: absolute;
      top: 8px;
      left: 50%;
      transform: translateX(-50%);
      width: 40px;
      height: 4px;
      background: rgba(255, 255, 255, 0.3);
      border-radius: 2px;
      cursor: grab;
    }

    .swipe-content {
      position: relative;
      width: 100%;
      height: 100%;
      overflow: hidden;
      padding: 20px;
    }

    .content-slider {
      display: flex;
      width: 1100%; /* 11 cards width */
      height: 100%;
      transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    .content-card {
      width: 9.09%; /* 100% / 11 cards */
      flex-shrink: 0;
      padding: 1rem;
      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;
    }

    .card-icon {
      font-size: 2rem;
      margin-bottom: 1rem;
      opacity: 0.8;
    }

    .card-title {
      font-family: 'Space Grotesk', sans-serif;
      font-size: 1.1rem;
      font-weight: 600;
      margin-bottom: 0.5rem;
      color: var(--accent-gold);
    }

    .card-description {
      font-size: 0.85rem;
      color: var(--text-secondary);
      line-height: 1.4;
      margin-bottom: 1rem;
    }

    .card-features {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      width: 100%;
    }

    .feature-item {
      background: rgba(255, 255, 255, 0.05);
      border: 1px solid rgba(255, 255, 255, 0.1);
      border-radius: 6px;
      padding: 0.5rem;
      font-size: 0.75rem;
      color: var(--text-muted);
    }

    /* Navigation Arrows */
    .nav-arrows {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 60px;
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: var(--blur);
      border: 1px solid rgba(255, 255, 255, 0.2);
      border-radius: 20px;
      cursor: pointer;
      transition: all 0.3s ease;
      font-size: 1.2rem;
      color: var(--text-primary);
      z-index: 10;
    }

    .nav-arrows:hover {
      background: rgba(255, 255, 255, 0.2);
      transform: translateY(-50%) scale(1.1);
    }

    .nav-arrows.left {
      left: 10px;
    }

    .nav-arrows.right {
      right: 10px;
    }

    .nav-arrows.disabled {
      opacity: 0.3;
      cursor: not-allowed;
      pointer-events: none;
    }

    /* Progress Dots */
    .progress-dots {
      position: absolute;
      bottom: 15px;
      left: 50%;
      transform: translateX(-50%);
      display: flex;
      gap: 8px;
      z-index: 10;
    }

    .progress-dot {
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.3);
      transition: all 0.3s ease;
    }

    .progress-dot.active {
      background: var(--accent-lime);
      transform: scale(1.2);
    }

    /* Touch/Swipe Area */
    .touch-area {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 5;
    }

    /* Activation Button */
    .activate-btn {
      position: fixed;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      background: linear-gradient(135deg, var(--accent-gold), var(--accent-teal));
      color: #000;
      border: none;
      padding: 12px 24px;
      border-radius: 25px;
      font-size: 0.9rem;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      z-index: 100;
      box-shadow: var(--shadow);
    }

    .activate-btn:hover {
      transform: translateX(-50%) translateY(-2px);
      box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);
    }

    .activate-btn.hidden {
      opacity: 0;
      transform: translateX(-50%) translateY(60px);
      pointer-events: none;
    }

    /* Mobile Optimizations */
    @media (max-width: 768px) {
      .brand-name {
        font-size: 2rem;
      }

      .main-container {
        padding: 1.5rem;
      }

      .swipe-container {
        height: 280px;
        transform: translateY(200px);
      }

      .nav-arrows {
        width: 35px;
        height: 50px;
        font-size: 1rem;
      }
    }
  </style>
</head>
<body>
  <div class="constellation-bg" id="constellation"></div>

  <header class="header">
    <div class="header-content">
      <div class="brand-name">INTUITY</div>
      <div class="subtitle">Simple Swipe Interface</div>
      <div class="author-section">
        <a href="../index.html" class="nav-btn">
          <i class="fas fa-home"></i> Home
        </a>
        <div class="author-credit">by Majid Nashtai</div>
        <a href="../index.html" class="nav-btn">
          <i class="fas fa-arrow-left"></i> Back
        </a>
      </div>
    </div>
  </header>

  <div class="main-container">
    <div class="text-display-container">
      <div class="text-paragraph">
        Welcome to the <span class="text-highlight">Simple Swipe Interface</span> - one focused box with clear navigation.
      </div>
      <div class="text-paragraph">
        All your learning tools in <span class="text-highlight">one place</span>, accessed through intuitive left and right swipes.
      </div>
      <div class="text-paragraph">
        <strong>Tap the button below</strong> to reveal the tool box, then <strong>use the arrows or swipe</strong> to navigate.
      </div>
    </div>

    <div class="instruction-hint">
      👆 Tap below to activate your learning toolkit
    </div>
  </div>

  <!-- Activation Button -->
  <button class="activate-btn" id="activateBtn" onclick="toggleSwipeBox()">
    <i class="fas fa-magic"></i> Activate Learning Tools
  </button>

  <!-- Single Swipe Box -->
  <div class="swipe-container" id="swipeContainer">
    <div class="swipe-handle"></div>
    
    <!-- Left Arrow -->
    <div class="nav-arrows left" id="leftArrow" onclick="swipeLeft()">
      <i class="fas fa-chevron-left"></i>
    </div>
    
    <!-- Right Arrow -->
    <div class="nav-arrows right" id="rightArrow" onclick="swipeRight()">
      <i class="fas fa-chevron-right"></i>
    </div>

    <div class="swipe-content">
      <div class="content-slider" id="contentSlider">
        
        <!-- Card 1: Learning Analytics -->
        <div class="content-card">
          <div class="card-icon">🔥</div>
          <div class="card-title">Learning Analytics</div>
          <div class="card-description">Track your progress with detailed insights</div>
          <div class="card-features">
            <div class="feature-item">📈 Progress Tracking</div>
            <div class="feature-item">🎯 Goal Setting</div>
            <div class="feature-item">🧠 AI Insights</div>
          </div>
        </div>

        <!-- Card 2: Interactive Content -->
        <div class="content-card">
          <div class="card-icon">💡</div>
          <div class="card-title">Interactive Content</div>
          <div class="card-description">Rich multimedia learning experiences</div>
          <div class="card-features">
            <div class="feature-item">▶️ Multimedia</div>
            <div class="feature-item">🎮 Gamification</div>
            <div class="feature-item">👥 Collaboration</div>
          </div>
        </div>

        <!-- Card 3: Assessment Tools -->
        <div class="content-card">
          <div class="card-icon">🎯</div>
          <div class="card-title">Assessment Tools</div>
          <div class="card-description">Smart quizzes and challenges</div>
          <div class="card-features">
            <div class="feature-item">📝 Smart Quizzes</div>
            <div class="feature-item">⏱️ Timed Challenges</div>
            <div class="feature-item">🏆 Achievements</div>
          </div>
        </div>

        <!-- Card 4: Personalization -->
        <div class="content-card">
          <div class="card-icon">🌟</div>
          <div class="card-title">Personalization</div>
          <div class="card-description">Customize your learning experience</div>
          <div class="card-features">
            <div class="feature-item">🎨 Custom Themes</div>
            <div class="feature-item">⚙️ Adaptive UI</div>
            <div class="feature-item">🌍 Multi-language</div>
          </div>
        </div>

        <!-- Card 5: Content Library -->
        <div class="content-card">
          <div class="card-icon">📚</div>
          <div class="card-title">Content Library</div>
          <div class="card-description">Access thousands of resources</div>
          <div class="card-features">
            <div class="feature-item">📖 Vast Collection</div>
            <div class="feature-item">🔍 Smart Search</div>
            <div class="feature-item">🔖 Bookmarks</div>
          </div>
        </div>

        <!-- Card 6: Advanced Features -->
        <div class="content-card">
          <div class="card-icon">🔬</div>
          <div class="card-title">Advanced Features</div>
          <div class="card-description">AI-powered learning assistance</div>
          <div class="card-features">
            <div class="feature-item">🪄 AI Tutor</div>
            <div class="feature-item">🔬 Deep Analysis</div>
            <div class="feature-item">🚀 Accelerated Learning</div>
          </div>
        </div>

        <!-- Card 7: Communication -->
        <div class="content-card">
          <div class="card-icon">💬</div>
          <div class="card-title">Communication</div>
          <div class="card-description">Connect with instructors and peers</div>
          <div class="card-features">
            <div class="feature-item">💬 Live Chat</div>
            <div class="feature-item">📹 Video Calls</div>
            <div class="feature-item">❓ Q&A Forums</div>
          </div>
        </div>

        <!-- Card 8: Integration -->
        <div class="content-card">
          <div class="card-icon">🌐</div>
          <div class="card-title">Integration</div>
          <div class="card-description">Seamless device synchronization</div>
          <div class="card-features">
            <div class="feature-item">☁️ Cloud Sync</div>
            <div class="feature-item">📱 Mobile Apps</div>
            <div class="feature-item">🔌 API Access</div>
          </div>
        </div>

        <!-- Card 9: Quick Actions -->
        <div class="content-card">
          <div class="card-icon">⚡</div>
          <div class="card-title">Quick Actions</div>
          <div class="card-description">Instant access to common tasks</div>
          <div class="card-features">
            <div class="feature-item">⚡ Instant Start</div>
            <div class="feature-item">🕒 Recent Activity</div>
            <div class="feature-item">⭐ Favorites</div>
          </div>
        </div>

        <!-- Card 10: Statistics -->
        <div class="content-card">
          <div class="card-icon">📊</div>
          <div class="card-title">Statistics</div>
          <div class="card-description">Detailed performance metrics</div>
          <div class="card-features">
            <div class="feature-item">📊 Performance Overview</div>
            <div class="feature-item">📅 Learning Streaks</div>
            <div class="feature-item">🏆 Leaderboards</div>
          </div>
        </div>

        <!-- Card 11: Settings -->
        <div class="content-card">
          <div class="card-icon">🛠️</div>
          <div class="card-title">Settings</div>
          <div class="card-description">Customize your preferences</div>
          <div class="card-features">
            <div class="feature-item">👤 Profile Settings</div>
            <div class="feature-item">🔔 Notifications</div>
            <div class="feature-item">🛡️ Privacy</div>
          </div>
        </div>

      </div>
    </div>

    <!-- Progress Dots -->
    <div class="progress-dots" id="progressDots">
      <div class="progress-dot active"></div>
      <div class="progress-dot"></div>
      <div class="progress-dot"></div>
      <div class="progress-dot"></div>
      <div class="progress-dot"></div>
      <div class="progress-dot"></div>
      <div class="progress-dot"></div>
      <div class="progress-dot"></div>
      <div class="progress-dot"></div>
      <div class="progress-dot"></div>
      <div class="progress-dot"></div>
    </div>

    <!-- Touch Area for Swiping -->
    <div class="touch-area" id="touchArea"></div>
  </div>

  <script>
    // Global state
    let currentCard = 0;
    let totalCards = 11;
    let isBoxVisible = false;
    let touchStartX = 0;
    let touchEndX = 0;
    let isDragging = false;

    // Create constellation background
    function createConstellation() {
      const constellation = document.getElementById('constellation');
      for (let i = 0; i < 30; i++) {
        const star = document.createElement('div');
        star.className = 'star';
        star.style.left = Math.random() * 100 + '%';
        star.style.top = Math.random() * 100 + '%';
        star.style.animationDelay = Math.random() * 3 + 's';
        constellation.appendChild(star);
      }
    }

    // Toggle swipe box visibility
    function toggleSwipeBox() {
      const container = document.getElementById('swipeContainer');
      const activateBtn = document.getElementById('activateBtn');
      
      isBoxVisible = !isBoxVisible;
      
      if (isBoxVisible) {
        container.classList.add('visible');
        activateBtn.classList.add('hidden');
      } else {
        container.classList.remove('visible');
        activateBtn.classList.remove('hidden');
      }
      
      updateArrows();
    }

    // Navigate to specific card
    function goToCard(index) {
      currentCard = Math.max(0, Math.min(index, totalCards - 1));
      
      const slider = document.getElementById('contentSlider');
      const translateX = -(currentCard * (100 / totalCards));
      slider.style.transform = `translateX(${translateX}%)`;
      
      updateProgressDots();
      updateArrows();
    }

    // Swipe navigation
    function swipeLeft() {
      if (currentCard > 0) {
        goToCard(currentCard - 1);
      }
    }

    function swipeRight() {
      if (currentCard < totalCards - 1) {
        goToCard(currentCard + 1);
      }
    }

    // Update progress dots
    function updateProgressDots() {
      const dots = document.querySelectorAll('.progress-dot');
      dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === currentCard);
      });
    }

    // Update arrow states
    function updateArrows() {
      const leftArrow = document.getElementById('leftArrow');
      const rightArrow = document.getElementById('rightArrow');
      
      leftArrow.classList.toggle('disabled', currentCard === 0);
      rightArrow.classList.toggle('disabled', currentCard === totalCards - 1);
    }

    // Touch/swipe handling
    function setupTouchHandling() {
      const touchArea = document.getElementById('touchArea');
      
      touchArea.addEventListener('touchstart', (e) => {
        touchStartX = e.touches[0].clientX;
        isDragging = true;
      });

      touchArea.addEventListener('touchmove', (e) => {
        if (!isDragging) return;
        e.preventDefault();
      });

      touchArea.addEventListener('touchend', (e) => {
        if (!isDragging) return;
        touchEndX = e.changedTouches[0].clientX;
        isDragging = false;
        
        const swipeThreshold = 50;
        const swipeDistance = touchStartX - touchEndX;
        
        if (Math.abs(swipeDistance) > swipeThreshold) {
          if (swipeDistance > 0) {
            // Swiped left (go right)
            swipeRight();
          } else {
            // Swiped right (go left)
            swipeLeft();
          }
        }
      });

      // Mouse events for desktop
      touchArea.addEventListener('mousedown', (e) => {
        touchStartX = e.clientX;
        isDragging = true;
        e.preventDefault();
      });

      document.addEventListener('mousemove', (e) => {
        if (!isDragging) return;
        e.preventDefault();
      });

      document.addEventListener('mouseup', (e) => {
        if (!isDragging) return;
        touchEndX = e.clientX;
        isDragging = false;
        
        const swipeThreshold = 50;
        const swipeDistance = touchStartX - touchEndX;
        
        if (Math.abs(swipeDistance) > swipeThreshold) {
          if (swipeDistance > 0) {
            swipeRight();
          } else {
            swipeLeft();
          }
        }
      });
    }

    // Keyboard navigation
    document.addEventListener('keydown', (e) => {
      if (!isBoxVisible) return;
      
      if (e.key === 'ArrowLeft') {
        swipeLeft();
      } else if (e.key === 'ArrowRight') {
        swipeRight();
      } else if (e.key === 'Escape') {
        toggleSwipeBox();
      }
    });

    // Handle swipe container itself (pull down to close)
    function setupContainerHandling() {
      const container = document.getElementById('swipeContainer');
      const handle = document.querySelector('.swipe-handle');
      let startY = 0;
      let currentY = 0;
      let isHandleDragging = false;

      handle.addEventListener('touchstart', (e) => {
        startY = e.touches[0].clientY;
        isHandleDragging = true;
        container.style.transition = 'none';
      });

      handle.addEventListener('touchmove', (e) => {
        if (!isHandleDragging) return;
        currentY = e.touches[0].clientY - startY;
        
        if (currentY > 0) {
          container.style.transform = `translateY(${currentY}px)`;
        }
      });

      handle.addEventListener('touchend', (e) => {
        if (!isHandleDragging) return;
        isHandleDragging = false;
        container.style.transition = 'transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
        
        if (currentY > 100) {
          toggleSwipeBox();
        } else {
          container.style.transform = 'translateY(0)';
        }
      });
    }

    // Initialize everything
    document.addEventListener('DOMContentLoaded', () => {
      createConstellation();
      setupTouchHandling();
      setupContainerHandling();
      updateProgressDots();
      updateArrows();
    });
  </script>
</body>
</html>

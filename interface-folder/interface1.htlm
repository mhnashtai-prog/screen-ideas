

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>INTUITY - Enhanced Floating Interface</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=Space+Grotesk:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

  <style>
    :root {
      --bg-primary: #1a2332;
      --bg-secondary: #243447;
      --card-bg: rgba(255, 255, 255, 0.08);
      --card-border: rgba(255, 255, 255, 0.12);
      --accent-gold: #f4a261;
      --accent-teal: #2dd4bf;
      --accent-lime: #32d74b;
      --accent-orange: #ff9500;
      --accent-brick: #c44536;
      --accent-purple: #8b5cf6;
      --accent-pink: #ec4899;
      --text-primary: #ffffff;
      --text-secondary: rgba(255, 255, 255, 0.7);
      --text-muted: rgba(255, 255, 255, 0.5);
      --intuity-gold: #ffd54f;
      --intuity-teal: #26a69a;
      --space-xs: 0.25rem;
      --space-sm: 0.5rem;
      --space-md: 1rem;
      --space-lg: 1.5rem;
      --space-xl: 2rem;
      --blur: blur(20px);
      --shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
      --box-shadow-glow: 0 0 20px rgba(255, 255, 255, 0.1);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
      background: linear-gradient(135deg, var(--bg-primary) 0%, var(--bg-secondary) 100%);
      color: var(--text-primary);
      min-height: 100vh;
      line-height: 1.6;
      overflow-x: hidden;
      touch-action: manipulation;
    }

    .constellation-bg {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: 1;
      opacity: 0.3;
    }

    .star {
      position: absolute;
      width: 2px;
      height: 2px;
      background: var(--accent-gold);
      border-radius: 50%;
      animation: twinkle 3s infinite alternate;
    }

    .star:nth-child(even) {
      animation-delay: 1.5s;
      background: var(--accent-teal);
    }

    @keyframes twinkle {
      0% { opacity: 0.3; }
      100% { opacity: 0.8; }
    }

    .header {
      position: sticky;
      top: 0;
      z-index: 100;
      background: rgba(26, 35, 50, 0.9);
      backdrop-filter: var(--blur);
      border-bottom: 1px solid var(--card-border);
      padding: 12px;
    }

    .header-content {
      max-width: 600px;
      margin: 0 auto;
      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;
    }

    .brand-name {
      font-family: 'Space Grotesk', sans-serif;
      font-size: 2.5rem;
      font-weight: 700;
      background: linear-gradient(135deg, var(--intuity-gold) 0%, var(--intuity-teal) 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      margin-bottom: 8px;
      position: relative;
    }

    .brand-name::after {
      content: '✨';
      position: absolute;
      top: -10px;
      right: -20px;
      font-size: 1.5rem;
      animation: sparkle 3s ease-in-out infinite;
    }

    @keyframes sparkle {
      0%, 100% { 
        opacity: 0.5; 
        transform: scale(1) rotate(0deg); 
      }
      50% { 
        opacity: 1; 
        transform: scale(1.3) rotate(180deg); 
      }
    }

    .subtitle {
      font-size: 0.9rem;
      color: var(--text-secondary);
      margin-bottom: 8px;
    }

    .author-credit {
      font-size: 0.7rem;
      color: var(--text-muted);
      font-weight: 300;
    }

    /* Main Content Container */
    .main-container {
      max-width: 600px;
      margin: 0 auto;
      padding: var(--space-xl);
      position: relative;
      z-index: 10;
    }

    .text-display-container {
      background: rgba(255, 255, 255, 0.03);
      border: 1px solid var(--card-border);
      border-radius: 1rem;
      padding: var(--space-xl);
      margin-bottom: var(--space-xl);
      line-height: 1.8;
      font-size: 1.05rem;
      box-shadow: var(--shadow);
      backdrop-filter: var(--blur);
      text-align: center;
    }

    .text-paragraph {
      margin-bottom: var(--space-lg);
    }

    .text-highlight {
      background: linear-gradient(135deg, var(--accent-gold), var(--accent-teal));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      font-weight: 600;
    }

    /* Control Panel */
    .control-panel {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
      gap: var(--space-md);
      margin-bottom: var(--space-xl);
    }

    .control-btn {
      background: var(--card-bg);
      backdrop-filter: var(--blur);
      border: 1px solid var(--card-border);
      color: var(--text-primary);
      padding: var(--space-md);
      border-radius: 0.75rem;
      font-size: 0.85rem;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: var(--space-xs);
    }

    .control-btn:hover {
      background: rgba(255, 255, 255, 0.15);
      border-color: var(--accent-lime);
      transform: translateY(-2px);
    }

    .control-btn.active {
      background: var(--accent-lime);
      color: #000;
      border-color: var(--accent-lime);
    }

    /* Floating Boxes - Up/Down Swipable (8 boxes) */
    .floating-box-vertical {
      position: fixed;
      width: 90vw;
      height: 60vh; /* 20% shorter than 80vh */
      max-width: 400px;
      background: var(--card-bg);
      backdrop-filter: var(--blur);
      border: 1px solid var(--card-border);
      border-radius: 1rem;
      padding: var(--space-lg);
      box-shadow: var(--shadow);
      z-index: 200;
      opacity: 0;
      visibility: hidden;
      transform: translateY(100vh);
      transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      left: 50%;
      margin-left: -45vw; /* Center horizontally */
      max-height: 60vh;
      overflow-y: auto;
    }

    .floating-box-vertical.visible {
      opacity: 1;
      visibility: visible;
      transform: translateY(0);
    }

    .floating-box-vertical.box-1 { top: 5vh; background: linear-gradient(135deg, var(--card-bg), rgba(244, 162, 97, 0.1)); }
    .floating-box-vertical.box-2 { top: 10vh; background: linear-gradient(135deg, var(--card-bg), rgba(45, 212, 191, 0.1)); }
    .floating-box-vertical.box-3 { top: 15vh; background: linear-gradient(135deg, var(--card-bg), rgba(50, 215, 75, 0.1)); }
    .floating-box-vertical.box-4 { top: 20vh; background: linear-gradient(135deg, var(--card-bg), rgba(255, 149, 0, 0.1)); }
    .floating-box-vertical.box-5 { top: 25vh; background: linear-gradient(135deg, var(--card-bg), rgba(196, 69, 54, 0.1)); }
    .floating-box-vertical.box-6 { top: 30vh; background: linear-gradient(135deg, var(--card-bg), rgba(139, 92, 246, 0.1)); }
    .floating-box-vertical.box-7 { top: 35vh; background: linear-gradient(135deg, var(--card-bg), rgba(236, 72, 153, 0.1)); }
    .floating-box-vertical.box-8 { top: 40vh; background: linear-gradient(135deg, var(--card-bg), rgba(34, 197, 94, 0.1)); }

    /* Floating Boxes - Left/Right Swipable (3 boxes) */
    .floating-box-horizontal {
      position: fixed;
      width: 80vw;
      height: 50vh;
      max-width: 350px;
      background: var(--card-bg);
      backdrop-filter: var(--blur);
      border: 1px solid var(--card-border);
      border-radius: 1rem;
      padding: var(--space-lg);
      box-shadow: var(--shadow);
      z-index: 150;
      opacity: 0;
      visibility: hidden;
      transform: translateX(-100vw);
      transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      top: 50%;
      margin-top: -25vh; /* Center vertically */
      overflow-y: auto;
    }

    .floating-box-horizontal.visible {
      opacity: 1;
      visibility: visible;
      transform: translateX(0);
    }

    .floating-box-horizontal.hbox-1 { 
      left: 5vw; 
      background: linear-gradient(135deg, var(--card-bg), rgba(255, 213, 79, 0.15)); 
    }
    .floating-box-horizontal.hbox-2 { 
      left: 10vw; 
      background: linear-gradient(135deg, var(--card-bg), rgba(38, 166, 154, 0.15)); 
    }
    .floating-box-horizontal.hbox-3 { 
      left: 15vw; 
      background: linear-gradient(135deg, var(--card-bg), rgba(244, 162, 97, 0.15)); 
    }

    /* Box Headers */
    .box-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: var(--space-lg);
      padding-bottom: var(--space-md);
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .box-title {
      font-family: 'Space Grotesk', sans-serif;
      font-size: 1.1rem;
      font-weight: 700;
      color: var(--accent-gold);
    }

    .close-btn {
      background: rgba(255, 255, 255, 0.1);
      border: none;
      border-radius: 50%;
      width: 32px;
      height: 32px;
      color: #fff;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1rem;
      transition: all 0.3s ease;
    }

    .close-btn:hover {
      background: var(--accent-brick);
      transform: scale(1.1);
    }

    /* Box Content */
    .box-content {
      font-size: 0.9rem;
      line-height: 1.6;
      color: var(--text-secondary);
    }

    .box-feature {
      background: rgba(255, 255, 255, 0.05);
      border: 1px solid rgba(255, 255, 255, 0.1);
      border-radius: 8px;
      padding: var(--space-md);
      margin-bottom: var(--space-md);
      transition: all 0.3s ease;
    }

    .box-feature:hover {
      background: rgba(255, 255, 255, 0.1);
      border-color: var(--accent-lime);
    }

    .feature-icon {
      font-size: 1.2rem;
      margin-right: var(--space-sm);
    }

    /* Drag Indicators */
    .drag-indicator {
      position: absolute;
      background: rgba(255, 255, 255, 0.3);
      border-radius: 3px;
      transition: all 0.3s ease;
    }

    .drag-indicator-vertical {
      top: 10px;
      left: 50%;
      transform: translateX(-50%);
      width: 40px;
      height: 4px;
    }

    .drag-indicator-horizontal {
      top: 50%;
      left: 10px;
      transform: translateY(-50%);
      width: 4px;
      height: 40px;
    }

    /* Status Indicators */
    .status-bar {
      position: fixed;
      top: 80px;
      right: 20px;
      display: flex;
      flex-direction: column;
      gap: var(--space-xs);
      z-index: 300;
    }

    .status-indicator {
      background: var(--card-bg);
      backdrop-filter: var(--blur);
      border: 1px solid var(--card-border);
      border-radius: 8px;
      padding: var(--space-xs) var(--space-sm);
      font-size: 0.7rem;
      font-weight: 600;
      text-align: center;
      min-width: 60px;
      transition: all 0.3s ease;
    }

    .status-indicator.active {
      background: var(--accent-lime);
      color: #000;
      border-color: var(--accent-lime);
    }

    /* Mobile Optimizations */
    @media (max-width: 768px) {
      .brand-name {
        font-size: 2rem;
      }

      .floating-box-vertical {
        width: 95vw;
        margin-left: -47.5vw;
        height: 55vh;
      }

      .floating-box-horizontal {
        width: 85vw;
        height: 45vh;
        margin-top: -22.5vh;
      }

      .main-container {
        padding: var(--space-lg);
      }

      .control-panel {
        grid-template-columns: repeat(2, 1fr);
      }
    }

    /* Touch Interaction Enhancements */
    .floating-box-vertical,
    .floating-box-horizontal {
      touch-action: pan-y;
      user-select: none;
    }

    .floating-box-horizontal {
      touch-action: pan-x;
    }

    /* Animation Effects */
    @keyframes slideInUp {
      from {
        opacity: 0;
        transform: translateY(100px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes slideInLeft {
      from {
        opacity: 0;
        transform: translateX(-100px);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }

    .animate-in-up {
      animation: slideInUp 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    .animate-in-left {
      animation: slideInLeft 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }
  </style>
</head>
<body>
  <div class="constellation-bg" id="constellation"></div>

  <header class="header">
    <div class="header-content">
      <div class="brand-name">INTUITY</div>
      <div class="subtitle">Enhanced Floating Interface</div>
      <div class="author-credit">by Majid Nashtai</div>
    </div>
  </header>

  <div class="main-container">
    <div class="text-display-container">
      <div class="text-paragraph">
        Welcome to the <span class="text-highlight">Enhanced INTUITY Interface</span> - a revolutionary way to interact with content through floating, swipable panels.
      </div>
      <div class="text-paragraph">
        This interface features <span class="text-highlight">8 vertical swipable boxes</span> and <span class="text-highlight">3 horizontal swipable boxes</span> that remain invisible until activated.
      </div>
      <div class="text-paragraph">
        Each box is optimized for mobile interaction with smooth animations and intuitive gestures.
      </div>
    </div>

    <div class="control-panel">
      <button class="control-btn" onclick="toggleVerticalBox(1)">
        <i class="fas fa-arrow-up"></i> Box 1
      </button>
      <button class="control-btn" onclick="toggleVerticalBox(2)">
        <i class="fas fa-arrow-up"></i> Box 2
      </button>
      <button class="control-btn" onclick="toggleVerticalBox(3)">
        <i class="fas fa-arrow-up"></i> Box 3
      </button>
      <button class="control-btn" onclick="toggleVerticalBox(4)">
        <i class="fas fa-arrow-up"></i> Box 4
      </button>
      <button class="control-btn" onclick="toggleVerticalBox(5)">
        <i class="fas fa-arrow-up"></i> Box 5
      </button>
      <button class="control-btn" onclick="toggleVerticalBox(6)">
        <i class="fas fa-arrow-up"></i> Box 6
      </button>
      <button class="control-btn" onclick="toggleVerticalBox(7)">
        <i class="fas fa-arrow-up"></i> Box 7
      </button>
      <button class="control-btn" onclick="toggleVerticalBox(8)">
        <i class="fas fa-arrow-up"></i> Box 8
      </button>
      <button class="control-btn" onclick="toggleHorizontalBox(1)">
        <i class="fas fa-arrow-right"></i> H-Box 1
      </button>
      <button class="control-btn" onclick="toggleHorizontalBox(2)">
        <i class="fas fa-arrow-right"></i> H-Box 2
      </button>
      <button class="control-btn" onclick="toggleHorizontalBox(3)">
        <i class="fas fa-arrow-right"></i> H-Box 3
      </button>
    </div>
  </div>

  <!-- 8 Vertical Swipable Boxes (Up/Down) -->
  <div class="floating-box-vertical box-1" id="vbox-1">
    <div class="drag-indicator drag-indicator-vertical"></div>
    <div class="box-header">
      <div class="box-title">🔥 Learning Analytics</div>
      <button class="close-btn" onclick="hideVerticalBox(1)">×</button>
    </div>
    <div class="box-content">
      <div class="box-feature">
        <i class="fas fa-chart-line feature-icon"></i>
        <strong>Progress Tracking:</strong> Monitor your learning journey with detailed analytics and insights.
      </div>
      <div class="box-feature">
        <i class="fas fa-target feature-icon"></i>
        <strong>Goal Setting:</strong> Set and achieve personalized learning objectives.
      </div>
      <div class="box-feature">
        <i class="fas fa-brain feature-icon"></i>
        <strong>AI Insights:</strong> Get intelligent recommendations based on your performance.
      </div>
    </div>
  </div>

  <div class="floating-box-vertical box-2" id="vbox-2">
    <div class="drag-indicator drag-indicator-vertical"></div>
    <div class="box-header">
      <div class="box-title">💡 Interactive Content</div>
      <button class="close-btn" onclick="hideVerticalBox(2)">×</button>
    </div>
    <div class="box-content">
      <div class="box-feature">
        <i class="fas fa-play feature-icon"></i>
        <strong>Multimedia:</strong> Rich content with videos, animations, and interactive elements.
      </div>
      <div class="box-feature">
        <i class="fas fa-gamepad feature-icon"></i>
        <strong>Gamification:</strong> Learning through engaging games and challenges.
      </div>
      <div class="box-feature">
        <i class="fas fa-users feature-icon"></i>
        <strong>Collaboration:</strong> Connect and learn with peers in real-time.
      </div>
    </div>
  </div>

  <div class="floating-box-vertical box-3" id="vbox-3">
    <div class="drag-indicator drag-indicator-vertical"></div>
    <div class="box-header">
      <div class="box-title">🎯 Assessment Tools</div>
      <button class="close-btn" onclick="hideVerticalBox(3)">×</button>
    </div>
    <div class="box-content">
      <div class="box-feature">
        <i class="fas fa-clipboard-check feature-icon"></i>
        <strong>Smart Quizzes:</strong> Adaptive assessments that adjust to your skill level.
      </div>
      <div class="box-feature">
        <i class="fas fa-stopwatch feature-icon"></i>
        <strong>Timed Challenges:</strong> Build speed and accuracy with time-based exercises.
      </div>
      <div class="box-feature">
        <i class="fas fa-medal feature-icon"></i>
        <strong>Achievements:</strong> Earn badges and certificates for your accomplishments.
      </div>
    </div>
  </div>

  <div class="floating-box-vertical box-4" id="vbox-4">
    <div class="drag-indicator drag-indicator-vertical"></div>
    <div class="box-header">
      <div class="box-title">🌟 Personalization</div>
      <button class="close-btn" onclick="hideVerticalBox(4)">×</button>
    </div>
    <div class="box-content">
      <div class="box-feature">
        <i class="fas fa-palette feature-icon"></i>
        <strong>Custom Themes:</strong> Personalize your interface with beautiful themes.
      </div>
      <div class="box-feature">
        <i class="fas fa-cog feature-icon"></i>
        <strong>Adaptive UI:</strong> Interface that learns and adapts to your preferences.
      </div>
      <div class="box-feature">
        <i class="fas fa-language feature-icon"></i>
        <strong>Multi-language:</strong> Support for multiple languages and localization.
      </div>
    </div>
  </div>

  <div class="floating-box-vertical box-5" id="vbox-5">
    <div class="drag-indicator drag-indicator-vertical"></div>
    <div class="box-header">
      <div class="box-title">📚 Content Library</div>
      <button class="close-btn" onclick="hideVerticalBox(5)">×</button>
    </div>
    <div class="box-content">
      <div class="box-feature">
        <i class="fas fa-book feature-icon"></i>
        <strong>Vast Collection:</strong> Access thousands of learning materials and resources.
      </div>
      <div class="box-feature">
        <i class="fas fa-search feature-icon"></i>
        <strong>Smart Search:</strong> Find exactly what you need with AI-powered search.
      </div>
      <div class="box-feature">
        <i class="fas fa-bookmark feature-icon"></i>
        <strong>Bookmarks:</strong> Save and organize your favorite content for later.
      </div>
    </div>
  </div>

  <div class="floating-box-vertical box-6" id="vbox-6">
    <div class="drag-indicator drag-indicator-vertical"></div>
    <div class="box-header">
      <div class="box-title">🔬 Advanced Features</div>
      <button class="close-btn" onclick="hideVerticalBox(6)">×</button>
    </div>
    <div class="box-content">
      <div class="box-feature">
        <i class="fas fa-magic feature-icon"></i>
        <strong>AI Tutor:</strong> Personal AI assistant to guide your learning process.
      </div>
      <div class="box-feature">
        <i class="fas fa-microscope feature-icon"></i>
        <strong>Deep Analysis:</strong> Detailed performance analysis and insights.
      </div>
      <div class="box-feature">
        <i class="fas fa-rocket feature-icon"></i>
        <strong>Accelerated Learning:</strong> Proven techniques to learn faster and retain more.
      </div>
    </div>
  </div>

  <div class="floating-box-vertical box-7" id="vbox-7">
    <div class="drag-indicator drag-indicator-vertical"></div>
    <div class="box-header">
      <div class="box-title">💬 Communication</div>
      <button class="close-btn" onclick="hideVerticalBox(7)">×</button>
    </div>
    <div class="box-content">
      <div class="box-feature">
        <i class="fas fa-comments feature-icon"></i>
        <strong>Live Chat:</strong> Real-time communication with instructors and peers.
      </div>
      <div class="box-feature">
        <i class="fas fa-video feature-icon"></i>
        <strong>Video Calls:</strong> Face-to-face learning sessions and tutoring.
      </div>
      <div class="box-feature">
        <i class="fas fa-question-circle feature-icon"></i>
        <strong>Q&A Forums:</strong> Get help and share knowledge with the community.
      </div>
    </div>
  </div>

  <div class="floating-box-vertical box-8" id="vbox-8">
    <div class="drag-indicator drag-indicator-vertical"></div>
    <div class="box-header">
      <div class="box-title">🌐 Integration</div>
      <button class="close-btn" onclick="hideVerticalBox(8)">×</button>
    </div>
    <div class="box-content">
      <div class="box-feature">
        <i class="fas fa-cloud feature-icon"></i>
        <strong>Cloud Sync:</strong> Access your progress across all devices seamlessly.
      </div>
      <div class="box-feature">
        <i class="fas fa-mobile-alt feature-icon"></i>
        <strong>Mobile Apps:</strong> Native apps for iOS and Android devices.
      </div>
      <div class="box-feature">
        <i class="fas fa-plug feature-icon"></i>
        <strong>API Access:</strong> Integrate with third-party tools and services.
      </div>
    </div>
  </div>

  <!-- 3 Horizontal Swipable Boxes (Left/Right) -->
  <div class="floating-box-horizontal hbox-1" id="hbox-1">
    <div class="drag-indicator drag-indicator-horizontal"></div>
    <div class="box-header">
      <div class="box-title">⚡ Quick Actions</div>
      <button class="close-btn" onclick="hideHorizontalBox(1)">×</button>
    </div>
    <div class="box-content">
      <div class="box-feature">
        <i class="fas fa-bolt feature-icon"></i>
        <strong>Instant Start:</strong> Jump into lessons with one tap.
      </div>
      <div class="box-feature">
        <i class="fas fa-history feature-icon"></i>
        <strong>Recent Activity:</strong> Continue where you left off.
      </div>
      <div class="box-feature">
        <i class="fas fa-star feature-icon"></i>
        <strong>Favorites:</strong> Quick access to your preferred content.
      </div>
      <div class="box-feature">
        <i class="fas fa-download feature-icon"></i>
        <strong>Offline Mode:</strong> Download content for offline learning.
      </div>
    </div>
  </div>

  <div class="floating-box-horizontal hbox-2" id="hbox-2">
    <div class="drag-indicator drag-indicator-horizontal"></div>
    <div class="box-header">
      <div class="box-title">📊 Statistics</div>
      <button class="close-btn" onclick="hideHorizontalBox(2)">×</button>
    </div>
    <div class="box-content">
      <div class="box-feature">
        <i class="fas fa-chart-pie feature-icon"></i>
        <strong>Performance Overview:</strong> Visual dashboard of your progress.
      </div>
      <div class="box-feature">
        <i class="fas fa-calendar feature-icon"></i>
        <strong>Learning Streaks:</strong> Track your daily study habits.
      </div>
      <div class="box-feature">
        <i class="fas fa-trophy feature-icon"></i>
        <strong>Leaderboards:</strong> Compare your progress with peers.
      </div>
      <div class="box-feature">
        <i class="fas fa-clock feature-icon"></i>
        <strong>Time Analytics:</strong> Understand your learning patterns.
      </div>
    </div>
  </div>

  <div class="floating-box-horizontal hbox-3" id="hbox-3">
    <div class="drag-indicator drag-indicator-horizontal"></div>
    <div class="box-header">
      <div class="box-title">🛠️ Settings</div>
      <button class="close-btn" onclick="hideHorizontalBox(3)">×</button>
    </div>
    <div class="box-content">
      <div class="box-feature">
        <i class="fas fa-user-cog feature-icon"></i>
        <strong>Profile Settings:</strong> Customize your learning profile.
      </div>
      <div class="box-feature">
        <i class="fas fa-bell feature-icon"></i>
        <strong>Notifications:</strong> Manage alerts and reminders.
      </div>
      <div class="box-feature">
        <i class="fas fa-shield-alt feature-icon"></i>
        <strong>Privacy:</strong> Control your data and privacy settings.
      </div>
      <div class="box-feature">
        <i class="fas fa-sync feature-icon"></i>
        <strong>Sync Preferences:</strong> Choose what data to sync across devices.
      </div>
    </div>
  </div>

  <!-- Status Bar -->
  <div class="status-bar">
    <div class="status-indicator" id="vbox-status">V-Boxes: 0/8</div>
    <div class="status-indicator" id="hbox-status">H-Boxes: 0/3</div>
  </div>

  <script>
    // Global state
    let activeVerticalBoxes = new Set();
    let activeHorizontalBoxes = new Set();
    let touchStartY = 0;
    let touchStartX = 0;
    let isDragging = false;
    let currentDragBox = null;

    // Create constellation background
    function createConstellation() {
      const constellation = document.getElementById('constellation');
      for (let i = 0; i < 30; i++) {
        const star = document.createElement('div');
        star.className = 'star';
        star.style.left = Math.random() * 100 + '%';
        star.style.top = Math.random() * 100 + '%';
        star.style.animationDelay = Math.random() * 3 + 's';
        constellation.appendChild(star);
      }
    }

    // Vertical box controls
    function toggleVerticalBox(id) {
      if (activeVerticalBoxes.has(id)) {
        hideVerticalBox(id);
      } else {
        showVerticalBox(id);
      }
    }

    function showVerticalBox(id) {
      const box = document.getElementById(`vbox-${id}`);
      if (box) {
        box.classList.add('visible', 'animate-in-up');
        activeVerticalBoxes.add(id);
        updateStatusIndicators();
        setupBoxGestures(box, 'vertical', id);
        
        // Remove animation class after animation completes
        setTimeout(() => {
          box.classList.remove('animate-in-up');
        }, 600);
      }
    }

    function hideVerticalBox(id) {
      const box = document.getElementById(`vbox-${id}`);
      if (box) {
        box.classList.remove('visible');
        activeVerticalBoxes.delete(id);
        updateStatusIndicators();
      }
    }

    // Horizontal box controls
    function toggleHorizontalBox(id) {
      if (activeHorizontalBoxes.has(id)) {
        hideHorizontalBox(id);
      } else {
        showHorizontalBox(id);
      }
    }

    function showHorizontalBox(id) {
      const box = document.getElementById(`hbox-${id}`);
      if (box) {
        box.classList.add('visible', 'animate-in-left');
        activeHorizontalBoxes.add(id);
        updateStatusIndicators();
        setupBoxGestures(box, 'horizontal', id);
        
        // Remove animation class after animation completes
        setTimeout(() => {
          box.classList.remove('animate-in-left');
        }, 600);
      }
    }

    function hideHorizontalBox(id) {
      const box = document.getElementById(`hbox-${id}`);
      if (box) {
        box.classList.remove('visible');
        activeHorizontalBoxes.delete(id);
        updateStatusIndicators();
      }
    }

    // Update status indicators
    function updateStatusIndicators() {
      document.getElementById('vbox-status').textContent = `V-Boxes: ${activeVerticalBoxes.size}/8`;
      document.getElementById('hbox-status').textContent = `H-Boxes: ${activeHorizontalBoxes.size}/3`;
      
      // Update active state
      document.getElementById('vbox-status').classList.toggle('active', activeVerticalBoxes.size > 0);
      document.getElementById('hbox-status').classList.toggle('active', activeHorizontalBoxes.size > 0);
    }

    // Enhanced gesture controls
    function setupBoxGestures(box, type, id) {
      let startPos = { x: 0, y: 0 };
      let currentPos = { x: 0, y: 0 };
      let isDragging = false;

      // Touch events
      box.addEventListener('touchstart', (e) => {
        startPos.x = e.touches[0].clientX;
        startPos.y = e.touches[0].clientY;
        isDragging = true;
        box.style.transition = 'none';
      });

      box.addEventListener('touchmove', (e) => {
        if (!isDragging) return;
        
        currentPos.x = e.touches[0].clientX - startPos.x;
        currentPos.y = e.touches[0].clientY - startPos.y;

        if (type === 'vertical') {
          // Only allow vertical movement
          box.style.transform = `translateY(${Math.max(0, currentPos.y)}px)`;
        } else {
          // Only allow horizontal movement
          box.style.transform = `translateX(${Math.min(0, currentPos.x)}px)`;
        }
      });

      box.addEventListener('touchend', (e) => {
        if (!isDragging) return;
        isDragging = false;
        box.style.transition = 'all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94)';

        const threshold = 100;
        
        if (type === 'vertical' && currentPos.y > threshold) {
          hideVerticalBox(id);
        } else if (type === 'horizontal' && currentPos.x < -threshold) {
          hideHorizontalBox(id);
        } else {
          // Snap back to original position
          box.style.transform = '';
        }
      });

      // Mouse events for desktop
      box.addEventListener('mousedown', (e) => {
        startPos.x = e.clientX;
        startPos.y = e.clientY;
        isDragging = true;
        box.style.transition = 'none';
        e.preventDefault();
      });

      document.addEventListener('mousemove', (e) => {
        if (!isDragging) return;
        
        currentPos.x = e.clientX - startPos.x;
        currentPos.y = e.clientY - startPos.y;

        if (type === 'vertical') {
          box.style.transform = `translateY(${Math.max(0, currentPos.y)}px)`;
        } else {
          box.style.transform = `translateX(${Math.min(0, currentPos.x)}px)`;
        }
      });

      document.addEventListener('mouseup', (e) => {
        if (!isDragging) return;
        isDragging = false;
        box.style.transition = 'all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94)';

        const threshold = 100;
        
        if (type === 'vertical' && currentPos.y > threshold) {
          hideVerticalBox(id);
        } else if (type === 'horizontal' && currentPos.x < -threshold) {
          hideHorizontalBox(id);
        } else {
          box.style.transform = '';
        }
      });
    }

    // Keyboard shortcuts
    document.addEventListener('keydown', (e) => {
      if (e.key >= '1' && e.key <= '8') {
        const boxNum = parseInt(e.key);
        toggleVerticalBox(boxNum);
      } else if (e.key.toLowerCase() === 'h') {
        // Toggle horizontal boxes sequentially
        const nextHBox = Array.from(activeHorizontalBoxes).length + 1;
        if (nextHBox <= 3) {
          toggleHorizontalBox(nextHBox);
        }
      } else if (e.key === 'Escape') {
        // Hide all boxes
        activeVerticalBoxes.forEach(id => hideVerticalBox(id));
        activeHorizontalBoxes.forEach(id => hideHorizontalBox(id));
      }
    });

    // Initialize the application
    document.addEventListener('DOMContentLoaded', () => {
      createConstellation();
      updateStatusIndicators();
      
      // Show welcome message
      setTimeout(() => {
        showVerticalBox(1);
      }, 1000);
    });

    // Auto-hide boxes on outside click
    document.addEventListener('click', (e) => {
      if (!e.target.closest('.floating-box-vertical') && 
          !e.target.closest('.floating-box-horizontal') && 
          !e.target.closest('.control-btn')) {
        // Optionally hide boxes when clicking outside
        // Uncomment below to enable this feature
        // activeVerticalBoxes.forEach(id => hideVerticalBox(id));
        // activeHorizontalBoxes.forEach(id => hideHorizontalBox(id));
      }
    });

    // Performance optimization - disable animations during rapid interactions
    let animationTimeout;
    function optimizeAnimations() {
      document.body.style.transition = 'none';
      clearTimeout(animationTimeout);
      animationTimeout = setTimeout(() => {
        document.body.style.transition = '';
      }, 300);
    }

    // Add performance optimization to gesture handlers
    document.addEventListener('touchstart', optimizeAnimations);
    document.addEventListener('touchmove', optimizeAnimations);
  </script>
</body>
</html>
